package com.example.udpp2p.message;

import com.example.udpp2p.MessageType;

import org.json.JSONException;
import org.json.JSONObject;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.UUID;

public class BaseMessage {

    /**
     * BaseMessage class for every Message
     * This class contains the base information that a message always need
     *
     * @param ID a random generated ID that indicated this message
     * @param dateTime the dateTime of the creation of the message, this with the ID will be a unique index
     *
     * @param type the MessageType to send
     */
    //AutoGenerated values
    public UUID ID;
    public LocalDateTime dateTime;

    //Passed values
    public MessageType type;

    public BaseMessage(MessageType type)
    {
        this.ID = UUID.randomUUID();
        this.dateTime = LocalDateTime.now();

        this.type = type;
    }

    public BaseMessage(MessageType type, UUID ID, LocalDateTime dateTime)
    {
        this.ID = ID;
        this.dateTime = dateTime;

        this.type = type;
    }

    public String toJSONString() {

        /// Message Scheme
        /// ******************************************************************************************
        /// ||          MessageType         ||          ID          ||          dateTime            ||
        /// ******************************************************************************************

        try {
            JSONObject obj = new JSONObject();
            obj.put("MessageType", type.toString());
            obj.put("ID", ID.toString());
            obj.put("DateTime", dateTime.format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss")));

            return obj.toString();
        } catch (JSONException e) {
            e.printStackTrace();
        }
        return null;
    }

    public static BaseMessage Parse(String message) {
        try {
            JSONObject obj = new JSONObject(message);

            MessageType type = MessageType.valueOf(obj.getString("MessageType"));
            UUID ID = UUID.fromString(obj.getString("ID"));
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
            LocalDateTime dateTime = LocalDateTime.parse(obj.getString("DateTime"), formatter);

            return new BaseMessage(type, ID, dateTime);
        } catch (JSONException e) {
            e.printStackTrace();
        }
        return null;
    }
}
